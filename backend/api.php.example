
<?php
/**
 * Blood Donation System - API Router
 * This is the main entry point for the API.
 * Rename this file to api.php after configuring it.
 */

// Include configuration
require_once __DIR__ . '/config.php';

// Set headers for CORS and JSON content type
header("Access-Control-Allow-Origin: {$API_CONFIG['allow_origin']}");
header("Access-Control-Allow-Methods: {$API_CONFIG['allow_methods']}");
header("Access-Control-Allow-Headers: {$API_CONFIG['allow_headers']}");
header("Content-Type: application/json");

// Handle preflight requests
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    exit(0);
}

// Database connection function
function getDbConnection() {
    global $DB_CONFIG;
    
    try {
        if ($DB_CONFIG['type'] === 'mysql' || $DB_CONFIG['type'] === 'mariadb') {
            $dsn = "mysql:host={$DB_CONFIG['host']};dbname={$DB_CONFIG['database']};";
        } else {
            $dsn = "pgsql:host={$DB_CONFIG['host']};dbname={$DB_CONFIG['database']};";
        }
        
        $pdo = new PDO($dsn, $DB_CONFIG['user'], $DB_CONFIG['password']);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        return $pdo;
    } catch (PDOException $e) {
        throw new Exception("Database connection failed: " . $e->getMessage());
    }
}

// Get request method and path
$method = $_SERVER['REQUEST_METHOD'];
$path = trim(parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH), '/');
$path_parts = explode('/', $path);

// Remove 'api.php' from path if it's included
if ($path_parts[0] === 'api.php') {
    array_shift($path_parts);
}

// Determine the resource and ID (if provided)
$resource = $path_parts[0] ?? '';
$id = $path_parts[1] ?? null;
$action = $path_parts[2] ?? null;

// Get request body for POST, PUT requests
$requestBody = null;
if ($method === 'POST' || $method === 'PUT') {
    $requestBody = json_decode(file_get_contents('php://input'), true);
}

// Simple API router
try {
    $pdo = getDbConnection();
    
    // Handle different resources
    switch ($resource) {
        case 'settings':
            // Get app settings
            if ($method === 'GET') {
                $stmt = $pdo->query("SELECT setting_key, setting_value, description FROM app_settings");
                $settings = $stmt->fetchAll(PDO::FETCH_ASSOC);
                echo json_encode($settings);
            }
            // Update app settings
            else if ($method === 'POST' && !$id) {
                // Implementation for updating settings
                echo json_encode(["success" => true, "message" => "Settings updated"]);
            } 
            else {
                http_response_code(405); // Method Not Allowed
                echo json_encode(["error" => "Method not allowed"]);
            }
            break;
            
        // Add more resource handlers here
            
        default:
            http_response_code(404);
            echo json_encode(["error" => "Resource not found"]);
    }
} catch (Exception $e) {
    http_response_code(500);
    echo json_encode(["error" => $e->getMessage()]);
}
